📋 Config: config/config.yaml
🔧 MVP-Fusion Engine: HighSpeed_Markdown_General
⚡ Performance: High-speed document extraction (2000+ pages/sec) with markdown output
🔧 Workers: 2 | Formats: 10
📁 Output directory: ../output/fusion
🗂️  Scanning 1 directories:
   - ~/projects/docling/cli/data_complex

📊 PROCESSING SUMMARY:
   Total files: 3
   File types: {'.pdf': 3}
   Workers: 2

🚀 Starting batch processing...
🔄 Using Traditional In-Memory Pipeline
📚 Loaded modular patterns:
   🏛️  Domains: 209 (2106 keywords)
   📄 Document Types: 219 (1462 keywords)
   🔍 Entity Categories: 2 (8 total patterns)
⚡ Built modular Aho-Corasick automatons: 2.12ms
   🏛️  Domain patterns: 2019
   📄 Document type patterns: 1400
   🔍 Entity patterns: 0
🚀 In-Memory Pipeline: convert → classify → enrich → extract
💾 Memory limit: 100MB per file, 1024MB service total
📄 Stage 1: Converting 3 files to in-memory documents...
   ✅ Conversion complete: 85ms (3/3 successful)
   💾 Total service memory: 0.1MB
📋 Stage 2: Classifying documents in memory...
Extracting entities with FLPC Rust regex...
🧠 Starting semantic fact extraction from classification data...
🔍 Found entity sections in classification:
   📊 Global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   🎯 Domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
      - global_person: 10 entities
      - global_org: 4 entities
      - global_loc: 10 entities
      - global_gpe: 1 entities
      - global_date: 3 entities
      - global_time: 0 entities
      - global_money: 1 entities
      - global_percent: 1 entities
      - global_phone: 10 entities
      - global_regulation: 2 entities
      - global_url: 1 entities
      - global_measurement: 10 entities
      - domain_financial: 1 entities
      - domain_percentages: 1 entities
      - domain_organizations: 14 entities
      - domain_people: 77 entities
      - domain_locations: 16 entities
      - domain_regulations: 5 entities
      - domain_statistics: 0 entities
🔄 Normalized 1 global + 0 domain entities
⬆️  Promoting classification entities to structured facts...
🔄 Dynamically promoting global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   Processing global_person: 10 entities
   Processing global_org: 4 entities
   Processing global_loc: 10 entities
   Processing global_gpe: 1 entities
   Processing global_date: 3 entities
   Processing global_time: 0 entities
   Processing global_money: 1 entities
   Processing global_percent: 1 entities
   Processing global_phone: 10 entities
   Processing global_regulation: 2 entities
   Processing global_url: 1 entities
   Processing global_measurement: 10 entities
✅ Total global facts promoted: 53
🔄 Dynamically promoting domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
   Processing domain_financial: 1 entities
   Processing domain_percentages: 1 entities
   Processing domain_organizations: 14 entities
   Processing domain_people: 77 entities
   Processing domain_locations: 16 entities
   Processing domain_regulations: 5 entities
   Processing domain_statistics: 0 entities
✅ Total domain facts promoted: 114
🔍 Extracting semantic relationships from markdown content...
✅ Total semantic facts extracted: 167
🧠 Layer 6: Semantic facts extracted - 167 facts found
Extracting entities with FLPC Rust regex...
🧠 Starting semantic fact extraction from classification data...
🔍 Found entity sections in classification:
   📊 Global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   🎯 Domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
      - global_person: 10 entities
      - global_org: 1 entities
      - global_loc: 2 entities
      - global_gpe: 0 entities
      - global_date: 0 entities
      - global_time: 0 entities
      - global_money: 0 entities
      - global_percent: 0 entities
      - global_phone: 0 entities
      - global_regulation: 0 entities
      - global_url: 3 entities
      - global_measurement: 0 entities
      - domain_financial: 0 entities
      - domain_percentages: 46 entities
      - domain_organizations: 60 entities
      - domain_people: 159 entities
      - domain_locations: 1 entities
      - domain_regulations: 0 entities
      - domain_statistics: 0 entities
🔄 Normalized 0 global + 0 domain entities
⬆️  Promoting classification entities to structured facts...
🔄 Dynamically promoting global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   Processing global_person: 10 entities
   Processing global_org: 1 entities
   Processing global_loc: 2 entities
   Processing global_gpe: 0 entities
   Processing global_date: 0 entities
   Processing global_time: 0 entities
   Processing global_money: 0 entities
   Processing global_percent: 0 entities
   Processing global_phone: 0 entities
   Processing global_regulation: 0 entities
   Processing global_url: 3 entities
   Processing global_measurement: 0 entities
✅ Total global facts promoted: 16
🔄 Dynamically promoting domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
   Processing domain_financial: 0 entities
   Processing domain_percentages: 46 entities
   Processing domain_organizations: 60 entities
   Processing domain_people: 159 entities
   Processing domain_locations: 1 entities
   Processing domain_regulations: 0 entities
   Processing domain_statistics: 0 entities
✅ Total domain facts promoted: 266
🔍 Extracting semantic relationships from markdown content...
✅ Total semantic facts extracted: 282
🧠 Layer 6: Semantic facts extracted - 282 facts found
Extracting entities with FLPC Rust regex...
🧠 Starting semantic fact extraction from classification data...
🔍 Found entity sections in classification:
   📊 Global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   🎯 Domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
      - global_person: 10 entities
      - global_org: 0 entities
      - global_loc: 0 entities
      - global_gpe: 1 entities
      - global_date: 0 entities
      - global_time: 0 entities
      - global_money: 0 entities
      - global_percent: 0 entities
      - global_phone: 0 entities
      - global_regulation: 0 entities
      - global_url: 2 entities
      - global_measurement: 0 entities
      - domain_financial: 0 entities
      - domain_percentages: 0 entities
      - domain_organizations: 43 entities
      - domain_people: 244 entities
      - domain_locations: 1 entities
      - domain_regulations: 14 entities
      - domain_statistics: 0 entities
🔄 Normalized 0 global + 0 domain entities
⬆️  Promoting classification entities to structured facts...
🔄 Dynamically promoting global entities: ['person', 'org', 'loc', 'gpe', 'date', 'time', 'money', 'percent', 'phone', 'regulation', 'url', 'measurement']
   Processing global_person: 10 entities
   Processing global_org: 0 entities
   Processing global_loc: 0 entities
   Processing global_gpe: 1 entities
   Processing global_date: 0 entities
   Processing global_time: 0 entities
   Processing global_money: 0 entities
   Processing global_percent: 0 entities
   Processing global_phone: 0 entities
   Processing global_regulation: 0 entities
   Processing global_url: 2 entities
   Processing global_measurement: 0 entities
✅ Total global facts promoted: 13
🔄 Dynamically promoting domain entities: ['financial', 'percentages', 'organizations', 'people', 'locations', 'regulations', 'statistics']
   Processing domain_financial: 0 entities
   Processing domain_percentages: 0 entities
   Processing domain_organizations: 43 entities
   Processing domain_people: 244 entities
   Processing domain_locations: 1 entities
   Processing domain_regulations: 14 entities
   Processing domain_statistics: 0 entities
✅ Total domain facts promoted: 302
🔍 Extracting semantic relationships from markdown content...
✅ Total semantic facts extracted: 315
🧠 Layer 6: Semantic facts extracted - 315 facts found
   ✅ Classification complete: 118ms (3/3 successful)
🔍 Stage 3: Enriching documents in memory...
   ✅ Enrichment complete: 2ms (3/3 successful)
📄 Stage 4: Extracting semantic rules in memory...
   ✅ Extraction complete: 1ms (3/3 successful)
💾 Final Stage: Writing processed documents to disk...
🔍 Debug: Checking JSON generation for 3124-stairways-and-ladders
   - Has semantic_json attr: True
   - semantic_json exists: True
   - semantic_json type: <class 'dict'>
📝 Generating JSON knowledge file: ../output/fusion/3124-stairways-and-ladders.json
📄 Generated knowledge file: 3124-stairways-and-ladders.json (167 facts)
🔍 Debug: Checking JSON generation for Complex2
   - Has semantic_json attr: True
   - semantic_json exists: True
   - semantic_json type: <class 'dict'>
📝 Generating JSON knowledge file: ../output/fusion/Complex2.json
📄 Generated knowledge file: Complex2.json (282 facts)
🔍 Debug: Checking JSON generation for Complex1
   - Has semantic_json attr: True
   - semantic_json exists: True
   - semantic_json type: <class 'dict'>
📝 Generating JSON knowledge file: ../output/fusion/Complex1.json
📄 Generated knowledge file: Complex1.json (315 facts)
   ✅ Write complete: 148ms (3/3 successful)
   💾 In-memory processing: 0.4MB total document memory

🚀 PROCESSING PERFORMANCE:
   🚀 PAGES/SEC: 108 (overall pipeline)
   ⚡ THROUGHPUT: 33.7 MB/sec raw document processing

✅ DATA TRANSFORMATION SUMMARY:
   📊 INPUT: 17 MB across 3 files (53 pages)
   📊 OUTPUT: 0.4 MB in 3 markdown files
   🗜️  COMPRESSION: 97.7% smaller (eliminated formatting, images, bloat)
   📁 RESULTS: 3 successful
   ⏱️  TOTAL TIME: 0.49s

💻 PROCESSING FOOTPRINT:
   🖥️  WORKERS: 2/16 cores (1 worker = 1 core)
   🧠 MEMORY: 0.1 MB peak usage
   📈 PROCESSING MEMORY: 0.1 MB during extraction
   ⚡ EFFICIENCY: 26 pages/worker, 8.3 MB/worker
   ✅ SUCCESS RATE: 100.0% (3/3)
