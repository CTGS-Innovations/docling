# MVP Hyper Pipeline Configuration
# Three-tier progressive refinement system

pipeline:
  # Global settings
  output_directory: "output"
  enable_caching: true
  performance_logging: true
  
  # Tier 1: Fast Document Classifier
  tier1_classifier:
    enabled: true
    speed_target: 5000  # pages/sec
    confidence_threshold: 0.5
    # Optimized patterns for 5000+ pages/sec performance
    patterns:
      technical: "\\b(?:algorithm|function|system|database|API|code)\\b"
      legal: "\\b(?:shall|agreement|contract|copyright|patent|clause)\\b"
      safety: "\\b(?:safety|hazard|risk|OSHA|emergency|protection)\\b"
      financial: "\\b(?:revenue|profit|investment|budget|cost|tax)\\b"
      research: "\\b(?:research|study|hypothesis|analysis|experiment|data)\\b"
      business: "\\b(?:business|company|market|customer|strategy|management)\\b"

  # Tier 2: Domain-Specific Pre-Tagger
  tier2_pretagger:
    enabled: true
    speed_target: 1500  # pages/sec
    
    # Universal entities (applied to all domains)
    universal_entities:
      persons: "\\b([A-Z][a-z]+(?:\\s+[A-Z][a-z]*)*)\\s+(?:said|stated|reported|announced|founded|CEO|CTO|president|director|manager|researcher|scientist|professor|Dr\\.|Ph\\.D\\.)"
      organizations: "\\b([A-Z][A-Za-z&\\s]+(?:Inc\\.|LLC|Corp\\.|Company|Corporation|Ltd\\.|University|Institute|Foundation|Agency|Department|Bureau|Commission))\\b"
      emails: "\\b([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})\\b"
      urls: "https?://(?:[-\\w.])+(?:[:\\d]+)?(?:/(?:[\\w/_.])*(?:\\?(?:[\\w&=%.])*)?(?:#(?:[\\w.])*)?)"
      locations: "\\b([A-Z][a-z]+(?:\\s+[A-Z][a-z]*)*),?\\s+(?:[A-Z]{2}|California|Texas|New York|Florida|Washington|Oregon|Illinois|Pennsylvania|Ohio|Michigan|Georgia|North Carolina)\\b"
      phone_numbers: "\\b(?:\\+?1[-.]?)?\\(?([0-9]{3})\\)?[-.]?([0-9]{3})[-.]?([0-9]{4})\\b"
    
    # Domain-specific patterns
    domains:
      business:
        pain_points: "\\b(?:struggle(?:s|d)?|difficult(?:y|ies)?|challenge(?:s|d)?|problem(?:s)?|issue(?:s)?|bottleneck(?:s)?|barrier(?:s)?|obstacle(?:s)?|limitation(?:s)?|constraint(?:s)?|frustrat(?:e|ed|ing)|inefficient|expensive|time-consuming|costly|manual|labor-intensive)\\s+(?:with|in|to|for|at|when|while|during)\\s+([^,.;]{10,80})"
        market_opportunities: "\\b(?:market|opportunity|demand|need|gap|potential|growth|expansion|emerging|trend|opportunity|untapped|underserved)\\s+(?:for|in|to|worth|valued|estimated|projected|expected)\\s+([^,.;]{10,80})"
        innovation_signals: "\\b(?:breakthrough|innovation|advance(?:d|ment)?|novel|new|emerging|cutting-edge|state-of-the-art|revolutionary|disruptive|patent(?:ed)?|proprietary|technology|solution|approach|method|technique)\\s+(?:in|for|to|that|which|using)\\s+([^,.;]{10,80})"
        competitive_intel: "\\b(?:competitor(?:s)?|rival(?:s)?|alternative(?:s)?|compared\\s+to|versus|vs\\.?|market\\s+leader(?:s)?|dominant\\s+player(?:s)?|key\\s+player(?:s)?)\\s+([^,.;]{10,80})"
        funding_signals: "\\b(?:raised|funding|investment|venture|capital|series|round|IPO|acquisition|merger|valuation)\\s+(?:of\\s+)?\\$\\d+(?:\\.\\d+)?\\s*(?:million|billion|M|B)"
        
      research:
        datasets: "\\b([A-Z][A-Za-z0-9-]{2,20})\\s+dataset\\b"
        methods: "\\b([A-Z][a-zA-Z\\s]{5,40})\\s+(?:algorithm|method|approach|technique|model|framework)\\b"
        metrics: "\\b([A-Z]{2,10}|[A-Z][a-z]+(?:[A-Z][a-z]*)*?)\\s+(?:score|metric|measure|accuracy|precision|recall|F1)\\b"
        institutions: "\\b([A-Z][a-zA-Z\\s&]{5,50}(?:University|Institute|Lab|Laboratory|Research|Center|College))\\b"
        
      safety:
        regulations: "\\b(?:29\\s+CFR|CFR)\\s*\\d{3,4}(?:\\.\\d+)*[a-z]?\\b"
        standards: "\\b(?:OSHA|ANSI|NFPA|ASTM|ISO)\\s*\\d{2,5}(?:[-.]?\\d+)*\\b"
        hazards: "\\b((?:chemical|physical|biological|ergonomic|electrical|mechanical|fire|explosion|fall|struck-by|caught-in|electrocution)\\s+hazard)\\b"
        ppe: "\\b((?:hard\\s+hat|safety\\s+glasses|hearing\\s+protection|respirator|gloves|safety\\s+shoes|fall\\s+protection)s?)\\b"
        
      technical:
        technologies: "\\b([A-Z][a-zA-Z\\s]{3,30}(?:API|SDK|framework|library|protocol|standard|specification))\\b"
        programming: "\\b((?:Python|Java|JavaScript|C\\+\\+|C#|Go|Rust|TypeScript|Ruby|PHP|Swift|Kotlin)\\s+(?:code|programming|development|application))\\b"
        architectures: "\\b((?:microservices|monolithic|serverless|cloud-native|distributed|event-driven)\\s+architecture)\\b"
        databases: "\\b((?:MySQL|PostgreSQL|MongoDB|Redis|Elasticsearch|Cassandra|Oracle|SQL Server)\\s+database)\\b"

  # Tier 3: Semantic Extraction
  tier3_semantic:
    enabled: true
    speed_target: 300  # pages/sec
    max_facts_per_doc: 100
    confidence_threshold: 0.7
    domain_enhancement: true
    relationship_extraction: true
    fact_validation: true

# Output configuration
output:
  formats:
    enhanced_markdown: true    # Original markdown with enriched front matter
    semantic_json: true        # Facts and entities as JSON
    performance_stats: true    # Processing metrics
  
  file_naming:
    enhanced_suffix: ""        # No suffix - enhance original file
    semantic_suffix: ".metadata.json"
    stats_suffix: ".stats.json"